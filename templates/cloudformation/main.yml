---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Cloud9++ with VPC    License: Apache 2.0 (Please do not remove)'

Parameters:
  Tag:
    Description: Name used to identified  values. Defaults to
    Type: String
    MaxLength: 16
    MinLength: 4
    Default: Yoda

  IAMUser:
    Description: IAM User used for Cloud9 Onwership
    Type: String

  CidrVPC:
    Description: 'Cidr for the VPC'
    Type: String
    Default: 10.0.0.0/16

  CidrPublicSubnetA:
    Description: 'Cidr for Public Subnet A'
    Type: String
    Default: 10.0.0.0/20
  CidrPrivateSubnetA:
    Description: 'Cidr for Private Subnet B'
    Type: String
    Default: 10.0.16.0/20

  CidrPublicSubnetB:
    Description: 'Cidr for Public Subnet C'
    Type: String
    Default: 10.0.32.0/20
  CidrPrivateSubnetB:
    Description: 'Cidr for Private Subnet C'
    Type: String
    Default: 10.0.48.0/20

  CidrPublicSubnetC:
    Description: 'Cidr for Public Subnet C'
    Type: String
    Default: 10.0.64.0/20
  CidrPrivateSubnetC:
    Description: 'Cidr for Private Subnet C'
    Type: String
    Default: 10.0.80.0/20

  CidrPublicSubnetD:
    Description: 'Cidr for Public Subnet D'
    Type: String
    Default: 10.0.96.0/20
  CidrPrivateSubnetD:
    Description: 'Cidr for Private Subnet D'
    Type: String
    Default: 10.0.112.0/20

  CidrPublicSubnetE:
    Description: 'Cidr for Public Subnet E'
    Type: String
    Default: 10.0.128.0/20
  CidrPrivateSubnetE:
    Description: 'Cidr for Private Subnet E'
    Type: String
    Default: 10.0.144.0/20

  CidrPublicSubnetF:
    Description: 'Cidr for Public Subnet F'
    Type: String
    Default: 10.0.160.0/20
  CidrPrivateSubnetF:
    Description: 'Cidr for Private Subnet F'
    Type: String
    Default: 10.0.176.0/20

  CidrPublicSubnetG:
    Description: 'Cidr for Public Subnet G'
    Type: String
    Default: 10.0.192.0/20
  CidrPrivateSubnetG:
    Description: 'Cidr for Private Subnet G'
    Type: String
    Default: 10.0.208.0/20

  S3TemplateBucket:
    Description: 'Bucket where the nested templates stacks are hosted'
    Type: String

  EnableIPv6:
    Description: 'Enable IPv6 on the  VPC'
    Type: String
    Default: Yes
    AllowedValues:
      - No
      - Yes

Resources:
  VPC:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      Parameters:
        Tag: !Ref Tag
        S3TemplateBucket: !Ref S3TemplateBucket
        CidrVPC: !Ref CidrVPC
        CidrPublicSubnetA: !Ref CidrPublicSubnetA
        CidrPrivateSubnetA: !Ref CidrPrivateSubnetA
        CidrPublicSubnetB: !Ref CidrPublicSubnetB
        CidrPrivateSubnetB: !Ref CidrPrivateSubnetB
        CidrPublicSubnetC: !Ref CidrPublicSubnetC
        CidrPrivateSubnetC: !Ref CidrPrivateSubnetC
        CidrPublicSubnetD: !Ref CidrPublicSubnetD
        CidrPrivateSubnetD: !Ref CidrPrivateSubnetD
        CidrPublicSubnetE: !Ref CidrPublicSubnetE
        CidrPrivateSubnetE: !Ref CidrPrivateSubnetE
        CidrPublicSubnetF: !Ref CidrPublicSubnetF
        CidrPrivateSubnetF: !Ref CidrPrivateSubnetF
        CidrPublicSubnetG: !Ref CidrPublicSubnetG
        CidrPrivateSubnetG: !Ref CidrPrivateSubnetG
        EnableIPv6: !Ref EnableIPv6
      Tags:
        - Key: Name
          Value: !Ref Tag
      TemplateURL:
        Fn::Join: [ '', [ 'https://s3-', !Ref "AWS::Region", '.amazonaws.com/', !Ref S3TemplateBucket, '/templates/cloudformation/nested/vpc.yml' ] ]
  NatGateway:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      Parameters:
        PublicSubnet: !GetAtt VPC.Outputs.PublicSubnetA
        PrivateRouteTable: !GetAtt VPC.Outputs.PrivateRouteTable
      Tags:
        - Key: Name
          Value: !Ref Tag
      TemplateURL:
        Fn::Join: [ '', [ 'https://s3-', !Ref "AWS::Region", '.amazonaws.com/', !Ref S3TemplateBucket, '/templates/cloudformation/nested/natgateway.yml' ] ]
  SecurityGroups:
      Type: "AWS::CloudFormation::Stack"
      Properties:
        Parameters:
          VPC: !GetAtt VPC.Outputs.VPC
          Tag: !Ref Tag
        Tags:
          - Key: Name
            Value: !Ref Tag
        TemplateURL:
          Fn::Join: [ '', [ 'https://s3-', !Ref "AWS::Region", '.amazonaws.com/', !Ref S3TemplateBucket, '/templates/cloudformation/nested/security_groups.yml' ] ]
  Cloud9:
      Type: "AWS::CloudFormation::Stack"
      Properties:
        Parameters:
          PublicSubnet: !GetAtt VPC.Outputs.PublicSubnetA
          IAMUser: !Ref IAMUser
          Tag: !Ref Tag
        Tags:
          - Key: Name
            Value: !Ref Tag
        TemplateURL:
          Fn::Join: [ '', [ 'https://s3-', !Ref "AWS::Region", '.amazonaws.com/', !Ref S3TemplateBucket, '/templates/cloudformation/nested/cloudformation/nested/cloud9.yml' ] ]

Outputs:
  VPC:
    Description: 'VPC.'
    Value: !GetAtt VPC.Outputs.VPC
    Export:
      Name: !Sub '${Tag}-VPC'
